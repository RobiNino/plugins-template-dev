resources:
  - name: buildJfrogCliPluginGit
    type: GitRepo
    configuration:
      path: RobiNino/plugins-template-dev #todo
      gitProvider: robi_github
      buildOn:
        # Build on commit and tags
        tagCreate: true
      branches:
        # Only build on the master
        include: master

pipelines:
  - name: build_jfrog_cli_plugin
    steps:
      - name: BuildAndPush
        type: Bash
        configuration:
          integrations:
            - name: robi_eco #todo releases_jfrog
          inputResources:
            - name: buildJfrogCliPluginGit
          runtime:
            type: image
            image:
              auto:
                language: go
                versions:
                  - "1.14.4"
          environmentVariables:
            JFROG_CLI_OFFER_CONFIG: "false"
            JFROG_CLI_PLUGIN_DOMAIN_NAME: "RobiNino"
            JFROG_CLI_PLUGIN_REPO_NAME: "plugins-template-dev"
            JFROG_CLI_PLUGIN_VERSION: "0.0.3"
        execution:
          onStart:
            - update_commit_status buildJfrogCliPluginGit --context "$step_name"
          onExecute:
            - git clone https://github.com/$JFROG_CLI_PLUGIN_DOMAIN_NAME/$JFROG_CLI_PLUGIN_REPO_NAME
            - pushd $JFROG_CLI_PLUGIN_REPO_NAME
            - sh "pipelinesScripts/pluginRelease.sh"
            - popd
            #- touch testtestt
            #- ./jfrog rt docker-push $IMAGE_NAME reg2 --url=https://releases.jfrog.io/artifactory --access-token=$int_releases_jfrog_token
            #- ./jfrog rt u ./todo --url=https://releases.jfrog.io/artifactory --access-token=$int_releases_jfrog_token
            # - ./jfrog rt u ./testtestt robi-t/pipe/ --url=https://ecosysjfrog.jfrog.io/artifactory --user=$int_robi_eco_user --apikey=$int_robi_eco_apikey
          onComplete:
            - update_commit_status buildJfrogCliPluginGit --context "$step_name"